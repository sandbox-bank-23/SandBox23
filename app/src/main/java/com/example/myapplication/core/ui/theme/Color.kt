@file:Suppress("MagicNumber")

package com.example.myapplication.core.ui.theme

import androidx.compose.ui.graphics.Color

// Цвета для светлой темы

// Парные использованные цвета (не корректировать)
val primaryLight = Color(0xFF65558F)
val onPrimaryLight = Color(0xFFFFFFFF)
val onPrimaryContainerLight = Color(0xFF4F378B)
val secondaryLight = Color(0xFF625B71)
val errorLight = Color(0xFFB3261E)
val onSurfaceLight = Color(0xFF1D1B20)
val onSurfaceVariantLight = Color(0xFF49454F)
val outlineLight = Color(0xFF79747E)
val outlineVariantLight = Color(0x1F1D1B20)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFF6750A4)
val surfaceLight = Color(0xFFFEF7FF)
val tertiaryLight = Color(0xFFFFFFFF)
val onTertiaryLight = Color(0xFF7d5260)
val onSecondaryLight = Color(0xFFFFFFFF)
val onErrorContainerLight = Color(0xFFB3261E)
val inverseSurfaceLight = Color(0xFF322F35)
val scrimLight = Color(0xFF000000)

// Неиспользованные цвета, можно корректировать пары
val primaryContainerLight = Color(0xFFEADDFF)
val secondaryContainerLight = Color(0xFFE8DEF8)
val onSecondaryContainerLight = Color(0xFF4A4458)
val onTertiaryContainerLight = Color(0xFF633B48)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFF9DEDC)
val backgroundLight = Color(0xFFFEF7FF)
val onBackgroundLight = Color(0xFF1D1B20)
val surfaceVariantLight = Color(0xFFE7E0EC)
val inverseOnSurfaceLight = Color(0xFFF5EFF7)
val inversePrimaryLight = Color(0xFFD0BCFF)
val surfaceDimLight = Color(0xFFDED8E1)
val surfaceBrightLight = Color(0xFFFEF7FF)
val surfaceContainerLowLight = Color(0xFFF7F2FA)
val surfaceContainerLight = Color(0xFFF3EDF7)
val surfaceContainerHighLight = Color(0xFFECE6F0)
val surfaceContainerHighestLight = Color(0xFFE6E0E9)

// Цвета для тёмной темы

// Парные использованные цвета (не корректировать)
val primaryDark = Color(0xFFD0BCFF)
val onPrimaryDark = Color(0xFF21005D)
val onPrimaryContainerDark = Color(0xFFFFFFFF)
val secondaryDark = Color(0xFFE8DEF8)
val errorDark = Color(0xFFB3261E)
val onSurfaceDark = Color(0xFFFFFFFF)
val onSurfaceVariantDark = Color(0xFFFFFFFF)
val outlineDark = Color(0xFFFFFFFF)
val outlineVariantDark = Color(0xFFCEC8D4)
val surfaceContainerLowestDark = Color(0xFF1D1B20)
val tertiaryContainerDark = Color(0xFF141218)
val surfaceDark = Color(0xFF141218)
val tertiaryDark = Color(0xFFEFB8C8)
val onTertiaryDark = Color(0xFF7d5260)
val onSecondaryDark = Color(0xFF332D41)
val onErrorContainerDark = Color(0xFF7d5260)
val inverseSurfaceDark = Color(0xFFCAC4D0)
val scrimDark = Color(0xFF000000)

// Неиспользованные цвета, можно корректировать пары
val primaryContainerDark = Color(0xFF4F378B)
val secondaryContainerDark = Color(0xFF4A4458)
val onSecondaryContainerDark = Color(0xFFE8DEF8)
val onTertiaryContainerDark = Color(0xFFFFD8E4)
val onErrorDark = Color(0xFF601410)
val errorContainerDark = Color(0xFF8C1D18)
val backgroundDark = Color(0xFF141218)
val onBackgroundDark = Color(0xFFE6E0E9)
val surfaceVariantDark = Color(0xFF49454F)
val inverseOnSurfaceDark = Color(0xFF322F35)
val inversePrimaryDark = Color(0xFF6750A4)
val surfaceDimDark = Color(0xFF141218)
val surfaceBrightDark = Color(0xFF3B383E)
val surfaceContainerLowDark = Color(0xFF1D1B20)
val surfaceContainerDark = Color(0xFF211F26)
val surfaceContainerHighDark = Color(0xFF2B2930)
val surfaceContainerHighestDark = Color(0xFF36343B)


// Индивидуальные цвета (для обеих тем)
val SuccessGreen = Color(0xFF14AE5C)
val Neutral30 = Color(0xFF484646)
val PinPadTextColor = Color(0xFF4A4458)
val PinPadBackgroundColor = Color(0xFFE8DEF8)
val DisabledButtonText = Color(0xFF8B868F)
val NavTextActiveLight = Color(0xFF1E1E1E)
val NavTextInactiveLight = Color(0xFF49454F)
val NavTextActiveDark = Color(0xFFE8DEF8)
val NavTextInactiveDark = Color(0xFFCAC4D0)
val CardBackground = Color(0XFFE0D9FF)
val CardBigCircle = Color(0xFFD2F1E4)
val CardSmallCircle = Color(0xFFFFD7B6)
val CardTextDark = Color(0XFF222222)
val lightPrimary = Color(0XFF65558F)
